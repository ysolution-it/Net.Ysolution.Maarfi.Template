// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Net.Ysolution.Maarfi.Template.Infrastructure.Data;

#nullable disable

namespace Net.Ysolution.Maarfi.Template.Infrastructure.Migrations
{
    [DbContext(typeof(ModuleCommandContext))]
    [Migration("20220526132850_start")]
    partial class start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Net.Ysolution.Maarfi.Template.Core.Domains.ModuleAggregate.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("datetime2")
                        .HasColumnName("changed");

                    b.Property<string>("Changer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("changer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creator");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("com_modules", "dbo");
                });

            modelBuilder.Entity("Net.Ysolution.Maarfi.Template.Core.Domains.RoleAggregate.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("arabic_name");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("datetime2")
                        .HasColumnName("changed");

                    b.Property<string>("Changer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("changer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creator");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("english_name");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("com_roles", "dbo");
                });

            modelBuilder.Entity("Net.Ysolution.Maarfi.Template.Core.Domains.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("datetime2")
                        .HasColumnName("changed");

                    b.Property<string>("Changer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("changer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creator");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tenant_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("com_users", "dbo");
                });

            modelBuilder.Entity("Net.Ysolution.Maarfi.Template.Core.Domains.UserAggregate.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("datetime2")
                        .HasColumnName("changed");

                    b.Property<string>("Changer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("changer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("creator");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("role_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("com_user_roles", "dbo");
                });

            modelBuilder.Entity("Net.Ysolution.Maarfi.Template.Core.Domains.UserAggregate.UserRole", b =>
                {
                    b.HasOne("Net.Ysolution.Maarfi.Template.Core.Domains.RoleAggregate.Role", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Net.Ysolution.Maarfi.Template.Core.Domains.UserAggregate.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Net.Ysolution.Maarfi.Template.Core.Domains.RoleAggregate.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Net.Ysolution.Maarfi.Template.Core.Domains.UserAggregate.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
